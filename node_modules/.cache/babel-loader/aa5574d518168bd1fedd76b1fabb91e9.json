{"ast":null,"code":"var _jsxFileName = \"/Users/vasynizami/Documents/web development/supernovas/unit_2/project_2/urbansmart/urbansmart/urbansmart/src/components/SearchResults/SearchResults.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction SearchResults(props) {\n  const [cityData, updateCityData] = useState([]);\n  useEffect(async () => {\n    const response = await axios.get(`https://api.teleport.org/api/urban_areas/slug:${props.city}/scores/`);\n    console.log(response);\n    updateCityData(response.data.categories);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, props.city.filter(city => city));\n}\n\nexport default SearchResults;","map":{"version":3,"sources":["/Users/vasynizami/Documents/web development/supernovas/unit_2/project_2/urbansmart/urbansmart/urbansmart/src/components/SearchResults/SearchResults.js"],"names":["React","useState","useEffect","axios","SearchResults","props","cityData","updateCityData","response","get","city","console","log","data","categories","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAE5B,QAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BN,QAAQ,CAAC,EAAD,CAA3C;AAEAC,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMM,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,iDAAgDJ,KAAK,CAACK,IAAK,UAAtE,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAD,IAAAA,cAAc,CAACC,QAAQ,CAACK,IAAT,CAAcC,UAAf,CAAd;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGT,KAAK,CAACK,IAAN,CAAWK,MAAX,CAAkBL,IAAI,IACrBA,IADD,CATH,CADF;AAgBD;;AAED,eAAeN,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nfunction SearchResults(props) {\n\n  const [cityData, updateCityData] = useState([]);\n\n  useEffect(async () => {\n    const response = await axios.get(`https://api.teleport.org/api/urban_areas/slug:${props.city}/scores/`);\n    console.log(response);\n    updateCityData(response.data.categories);\n  }, [])\n\n  return (\n    <div>\n      {/* {\n        cityData.map(category => (\n          <div>\n            <p>{category.name}</p>\n            <p>{category.score_out_of_10}</p>\n          </div>\n        ))\n      } */}\n      {props.city.filter(city => (\n        city\n      ))}\n    </div>\n  )\n\n}\n\nexport default SearchResults"]},"metadata":{},"sourceType":"module"}