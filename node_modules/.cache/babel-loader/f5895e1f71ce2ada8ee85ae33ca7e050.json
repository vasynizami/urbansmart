{"ast":null,"code":"var _jsxFileName = \"/Users/vasynizami/Documents/web development/supernovas/unit_2/project_2/urbansmart/urbansmart/urbansmart/src/components/CityData/CityData.js\";\nimport React, { useState } from 'react';\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport SearchResults from \"../SearchResults/SearchResults\";\n\nfunction CityData() {\n  const [input, setInput] = useState(\"\"); // const [city, setCity] = useState(\"\");\n\n  let filteredCity = input.filter(city => city === props.match.params.city); //the search bar has to clear and the info should refresh every time button is clicked\n  // const handleSubmit = () => {\n  //   // console.log(input);\n  //   // setCity(input);\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    placeholder: \"type in a city\",\n    onChange: e => setInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: `/citydata/${input}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/citydata/:city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchResults, {\n    city: filteredCity.replace(/\\s+/g, '-').toLowerCase(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default CityData;","map":{"version":3,"sources":["/Users/vasynizami/Documents/web development/supernovas/unit_2/project_2/urbansmart/urbansmart/urbansmart/src/components/CityData/CityData.js"],"names":["React","useState","Route","Switch","Link","SearchResults","CityData","input","setInput","filteredCity","filter","city","props","match","params","e","target","value","replace","toLowerCase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,kBAApC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAGA,SAASC,QAAT,GAAoB;AAElB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CAFkB,CAGlB;;AACA,MAAIQ,YAAY,GAAGF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAKA,IAAI,KAAKC,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBH,IAAlD,CAAnB,CAJkB,CAKlB;AACA;AACA;AACA;AAEA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEJ,KAA1B;AAAiC,IAAA,WAAW,EAAC,gBAA7C;AAA8D,IAAA,QAAQ,EAAGQ,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,aAAYV,KAAM,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAFF,eAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEE,YAAY,CAACS,OAAb,CAAqB,MAArB,EAA6B,GAA7B,EAAkCC,WAAlC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CALF,CADF;AAcD;;AAED,eAAeb,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport SearchResults from \"../SearchResults/SearchResults\"\n\n\nfunction CityData() {\n  \n  const [input, setInput] = useState(\"\");\n  // const [city, setCity] = useState(\"\");\n  let filteredCity = input.filter(city => (city === props.match.params.city))\n  //the search bar has to clear and the info should refresh every time button is clicked\n  // const handleSubmit = () => {\n  //   // console.log(input);\n  //   // setCity(input);\n    \n  // }\n\n  return (\n    <div>\n      <input type=\"text\" value={input} placeholder=\"type in a city\" onChange={(e) => setInput(e.target.value)}></input>\n      <Link to={`/citydata/${input}`}>\n        <button>Submit</button>\n      </Link>\n      <Switch>\n        <Route path=\"/citydata/:city\">\n          <SearchResults city={filteredCity.replace(/\\s+/g, '-').toLowerCase()}/>\n        </Route>\n      </Switch>\n    </div>\n  )\n\n}\n\nexport default CityData\n\n\n\n"]},"metadata":{},"sourceType":"module"}